version: "3.9"

services:
  web:
    container_name: ERP
    build:
      context: "./Services_interne/ERP"
      dockerfile: Dockerfile
    depends_on:
      - db
    volumes:
      - ./Services_interne/ERP/www:/var/www/html
    dns : 
      - 172.16.0.2

    networks :
        ZoneInterne : 
            ipv4_address : 172.16.0.4 

  db:
    container_name: DB
    build:
      context: "./Services_interne/BDD"
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./Services_interne/BDD/woodytoys_db/:/docker-entrypoint-initdb.d/
    environment:
      MYSQL_ROOT_PASSWORD: root
    networks :
        ZoneInterne : 
            ipv4_address : 172.16.0.9

  resolver:
    container_name: Resolver
    build:
      context: "./Services_interne/Resolveur"
      dockerfile: Dockerfile
        
    networks :
        ZoneInterne : 
            ipv4_address : 172.16.0.2
   
  soa:
    container_name: SOA
    build:
      context: "./Services_interne/SOA-interne"
      dockerfile: Dockerfile
    dns : 
      - 172.16.0.2
    networks :
        ZoneInterne : 
            ipv4_address : 172.16.0.11
    

  testpc:
    container_name: TESTpc
    build:
      context: "./Services_interne/PCtest"
      dockerfile: Dockerfile
    dns : 
      -  172.16.0.2
    networks :
        ZoneInterne : 
            ipv4_address : 172.16.0.10 
    

  mail:
    container_name: Mail
    build:
      context: "./Services_interne/Mail"
      dockerfile: Dockerfile
    dns: 
      - 172.16.0.2
    networks :
        ZoneInterne : 
            ipv4_address : 172.16.0.3

  soa_pub:
    container_name: soa_publique
    build: 
      context: "./Services_Publiques/SOA-publique"
      dockerfile: Dockerfile
    ports:
      - "10.0.0.4:53:53/tcp"
      - "10.0.0.4:53:53/udp" 
    networks:
      ZoneInterne:
        ipv4_address : 172.16.0.13

  web_pub:
    container_name: web_publique
    build:
      context: ./Services_Publiques/Web
      dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "80:80"
      - "443:443"
    networks:
      ZoneInterne:
        ipv4_address : 172.16.0.14
  certbot:
    container_name: Certbot
    image: docker.io/certbot/certbot:latest
    volumes:
      - ./Services_Publiques/Web/sites/www:/var/www/html
    command: 
      sh -c "certbot certonly --webroot -w /var/www/html/www -d www.m1-2.ephec-ti.be
      --agree-tos --email l.delbrouck@students.ephec.be --non-interactive --force-renewal &&
      cp /etc/letsencrypt/live/www.m1-2.ephec-ti.be/fullchain.pem /certs/fullchain.pem &&
      cp /etc/letsencrypt/live/www.m1-2.ephec-ti.be/privkey.pem /certs/privkey.pem"
  

    depends_on:
      - web_pub
    networks:
      ZoneInterne:
        ipv4_address : 172.16.0.15
   
# ================== NETWORK ==================
networks:
  ZoneInterne:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/24
#  DMZ :
#    driver : bridge
#    ipam : 
#      driver : default
#      config : 
#        - subnet : 172.16.1.0/24

# networks : 
#   LAN :
#     driver : bridge
#     ipam : 
#       driver : default
#       config : 
#         - subnet : 192.168.0.0/24


  
